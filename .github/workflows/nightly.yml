name: Nightly

on:
  schedule:
    - cron: '0 4 * * *'
  repository_dispatch:
    types: nightly
  workflow_dispatch:

jobs:
  check-new-commits:
    if: ${{ github.event_name == 'schedule' }}
    runs-on: ubuntu-latest
    outputs:
      build_nightly: ${{ steps.check.outputs.new_commits }}
    steps:
    - uses: actions/checkout@v2
    - id: check
      run: |
        git fetch --depth=1 --no-tags origin +refs/tags/nightly:refs/tags/nightly
        [ "$(git show-ref -s --head HEAD)" != "$(git show-ref -s nightly)" ] && echo ::set-output name=new_commits::true
  build-android:
    needs: check-new-commits
    if: ${{ needs.check-new-commits.outputs.build_nightly == 'true' }}
    runs-on: ubuntu-latest
    environment: release-build
    container:
      image: circleci/android:api-30-node
      options: -u root
    env:
      KEYSTORE_PATH: ${{ github.workspace }}/insporation.jks
    steps:
    - name: "Install SDK 32"
      run: sdkmanager "build-tools;32.0.0"
    - uses: actions/checkout@v2
      with:
        ref: main # Ensure translations update is included
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7'
    - name: Setup keystore
      run: |
       echo "$KEYSTORE" | base64 -d > "$KEYSTORE_PATH"
      env:
        KEYSTORE: ${{ secrets.KEYSTORE }}
    - name: Build
      run: |
        flutter build apk --release --build-number=$GITHUB_RUN_NUMBER
        mkdir -p dist
        cp build/app/outputs/apk/release/app-release.apk dist/insporation-nightly-$(git describe --tags 2>/dev/null || echo $GITHUB_RUN_NUMBER).apk
        git rev-parse main > dist/BUILD_SHA
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE_KEY_ALIAS: key
    - uses: actions/upload-artifact@v1
      with:
        name: Android Application bundles
        path: dist
  publish-android:
    needs: build-android
    runs-on: ubuntu-latest
    environment: release-build
    container:
      image: cgeo/fdroid-base
      options: -u root
    env:
      KEYSTORE_PATH: ${{ github.workspace }}/insporation.jks
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
    steps:
    - name: Update git
      run: |
        add-apt-repository -y ppa:git-core/ppa
        apt install -y git
    - uses: actions/download-artifact@v1
      with:
        name: Android Application bundles
        path: dist
    - id: build_sha
      run: echo "::set-output name=BUILD_SHA::$(cat dist/BUILD_SHA)"
    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: nightly
      env:
        GITHUB_SHA: ${{ steps.build_sha.outputs.BUILD_SHA }} # Ensure translations update is included
    - uses: AButler/upload-release-assets@v2.0
      with:
        files: 'dist/*'
        release-tag: nightly
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Checkout F-Droid repository
      uses: actions/checkout@v2
      with:
        ref: gh-pages
        path: pages
    - name: Setup keystore
      run: |
       echo "$KEYSTORE" | base64 -d > "$KEYSTORE_PATH"
      env:
        KEYSTORE: ${{ secrets.KEYSTORE }}
    - name: Update F-Droid repository
      run: |
        cd pages

        git config --local user.email "me+nightly-ci@jhass.eu"
        git config --local user.name  "Github Actions Nightly Job"

        # Truncate history
        git checkout --orphan new-pages
        git commit -m "Import previous state"

        cd fdroid

        # Add new build
        cp ../../dist/*.apk repo/

        # Cleanup archive
        find archive -name '*.apk' | sort -V | head -n-2 | xargs -r rm

        # Rebuild repos
        fdroid update

        # Cleanup icons
        for icon in {repo,archive}/icons/*.*.png; do
          repo="$(dirname "$(dirname "$icon")")"
          base="$(basename "$icon" .png)"
          build="$(echo "$base" | tr -Cd '0-9')"
          if [ ! -e "$repo/insporation-nightly-$build.apk" ]; then
            rm $repo/icons*/$base.{png,xml} || echo "No icons for $repo/$base.apk present"
          fi
        done

        # Publish
        git add .
        git commit -m "Update fdroid repository for nightly build $GITHUB_RUN_NUMBER"
        git push -f "https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY.git" new-pages:gh-pages
      shell: bash --noprofile --norc -Beo pipefail +f {0}
      env:
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEYSTORE_KEY_ALIAS: key
  publish-ios:
    needs: check-new-commits
    if: ${{ needs.check-new-commits.outputs.build_nightly == 'true' }}
    runs-on: macos-latest
    environment: release-build
    steps:
    - uses: actions/checkout@v2
      with:
        ref: main # Ensure translations update is included
    - uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.7'
    - name: Build
      run: |
        flutter build ios --release --no-codesign --build-number=$GITHUB_RUN_NUMBER
        cd ios
        bundle config set deployment 'true'
        bundle
        bundle exec fastlane beta
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        MATCH_GIT_PRIVATE_KEY: ${{ secrets.MATCH_GIT_PRIVATE_KEY }}
        APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
        FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
